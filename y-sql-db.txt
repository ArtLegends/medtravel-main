-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.accreditations (
  id bigint NOT NULL DEFAULT nextval('accreditations_id_seq'::regclass),
  name text NOT NULL UNIQUE,
  CONSTRAINT accreditations_pkey PRIMARY KEY (id)
);
CREATE TABLE public.booking_requests (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  clinic_id uuid,
  service_id bigint,
  doctor_id uuid,
  name text NOT NULL,
  phone text NOT NULL,
  contact_method USER-DEFINED NOT NULL,
  origin USER-DEFINED NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT booking_requests_pkey PRIMARY KEY (id),
  CONSTRAINT booking_requests_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT booking_requests_clinic_id_fkey FOREIGN KEY (clinic_id) REFERENCES public.clinics(id),
  CONSTRAINT booking_requests_service_id_fkey FOREIGN KEY (service_id) REFERENCES public.services(id),
  CONSTRAINT booking_requests_doctor_id_fkey FOREIGN KEY (doctor_id) REFERENCES public.doctors(id)
);
CREATE TABLE public.bookings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  request_id uuid,
  user_id uuid,
  clinic_id uuid,
  service_id bigint,
  doctor_id uuid,
  contact_name text,
  contact_phone text,
  contact_method USER-DEFINED,
  service_name text,
  status USER-DEFINED NOT NULL DEFAULT 'new'::booking_status,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT bookings_pkey PRIMARY KEY (id),
  CONSTRAINT bookings_request_id_fkey FOREIGN KEY (request_id) REFERENCES public.booking_requests(id),
  CONSTRAINT bookings_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT bookings_clinic_id_fkey FOREIGN KEY (clinic_id) REFERENCES public.clinics(id),
  CONSTRAINT bookings_service_id_fkey FOREIGN KEY (service_id) REFERENCES public.services(id),
  CONSTRAINT bookings_doctor_id_fkey FOREIGN KEY (doctor_id) REFERENCES public.doctors(id)
);
CREATE TABLE public.categories (
  id bigint NOT NULL DEFAULT nextval('categories_id_seq'::regclass),
  name text NOT NULL UNIQUE,
  slug text NOT NULL UNIQUE,
  CONSTRAINT categories_pkey PRIMARY KEY (id)
);
CREATE TABLE public.clinic_accreditations (
  clinic_id uuid NOT NULL,
  accreditation_id bigint NOT NULL,
  CONSTRAINT clinic_accreditations_pkey PRIMARY KEY (clinic_id, accreditation_id),
  CONSTRAINT clinic_accreditations_clinic_id_fkey FOREIGN KEY (clinic_id) REFERENCES public.clinics(id),
  CONSTRAINT clinic_accreditations_accreditation_id_fkey FOREIGN KEY (accreditation_id) REFERENCES public.accreditations(id)
);
CREATE TABLE public.clinic_applications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  clinic_name text NOT NULL,
  address text,
  country text,
  city text,
  contact_first_name text,
  contact_last_name text,
  contact_phone text,
  contact_email text,
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'reviewed'::text, 'approved'::text, 'rejected'::text])),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT clinic_applications_pkey PRIMARY KEY (id),
  CONSTRAINT clinic_applications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.clinic_categories (
  clinic_id uuid NOT NULL,
  category_id bigint NOT NULL,
  CONSTRAINT clinic_categories_pkey PRIMARY KEY (clinic_id, category_id),
  CONSTRAINT clinic_categories_clinic_id_fkey FOREIGN KEY (clinic_id) REFERENCES public.clinics(id),
  CONSTRAINT clinic_categories_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.categories(id)
);
CREATE TABLE public.clinic_hours (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  clinic_id uuid NOT NULL,
  weekday smallint NOT NULL CHECK (weekday >= 1 AND weekday <= 7),
  open time without time zone,
  close time without time zone,
  is_closed boolean NOT NULL DEFAULT false,
  CONSTRAINT clinic_hours_pkey PRIMARY KEY (id),
  CONSTRAINT clinic_hours_clinic_id_fkey FOREIGN KEY (clinic_id) REFERENCES public.clinics(id)
);
CREATE TABLE public.clinic_hours_exceptions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  clinic_id uuid NOT NULL,
  date date NOT NULL,
  open time without time zone,
  close time without time zone,
  is_closed boolean NOT NULL DEFAULT true,
  note text,
  CONSTRAINT clinic_hours_exceptions_pkey PRIMARY KEY (id),
  CONSTRAINT clinic_hours_exceptions_clinic_id_fkey FOREIGN KEY (clinic_id) REFERENCES public.clinics(id)
);
CREATE TABLE public.clinic_images (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  clinic_id uuid NOT NULL,
  url text NOT NULL,
  sort integer NOT NULL DEFAULT 0,
  CONSTRAINT clinic_images_pkey PRIMARY KEY (id),
  CONSTRAINT clinic_images_clinic_id_fkey FOREIGN KEY (clinic_id) REFERENCES public.clinics(id)
);
CREATE TABLE public.clinic_inquiries (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  clinic_id uuid NOT NULL,
  name text,
  email text,
  phone text,
  message text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT clinic_inquiries_pkey PRIMARY KEY (id),
  CONSTRAINT clinic_inquiries_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT clinic_inquiries_clinic_id_fkey FOREIGN KEY (clinic_id) REFERENCES public.clinics(id)
);
CREATE TABLE public.clinic_languages (
  clinic_id uuid NOT NULL,
  language_id bigint NOT NULL,
  CONSTRAINT clinic_languages_pkey PRIMARY KEY (clinic_id, language_id),
  CONSTRAINT clinic_languages_clinic_id_fkey FOREIGN KEY (clinic_id) REFERENCES public.clinics(id),
  CONSTRAINT clinic_languages_language_id_fkey FOREIGN KEY (language_id) REFERENCES public.languages(id)
);
CREATE TABLE public.clinic_premises (
  clinic_id uuid NOT NULL,
  premise_id bigint NOT NULL,
  CONSTRAINT clinic_premises_pkey PRIMARY KEY (clinic_id, premise_id),
  CONSTRAINT clinic_premises_clinic_id_fkey FOREIGN KEY (clinic_id) REFERENCES public.clinics(id),
  CONSTRAINT clinic_premises_premise_id_fkey FOREIGN KEY (premise_id) REFERENCES public.premises(id)
);
CREATE TABLE public.clinic_services (
  clinic_id uuid NOT NULL,
  service_id bigint NOT NULL,
  price numeric,
  currency character NOT NULL DEFAULT 'USD'::bpchar,
  CONSTRAINT clinic_services_pkey PRIMARY KEY (service_id, clinic_id),
  CONSTRAINT clinic_services_clinic_id_fkey FOREIGN KEY (clinic_id) REFERENCES public.clinics(id),
  CONSTRAINT clinic_services_service_id_fkey FOREIGN KEY (service_id) REFERENCES public.services(id)
);
CREATE TABLE public.clinic_travel_services (
  clinic_id uuid NOT NULL,
  travel_service_id bigint NOT NULL,
  CONSTRAINT clinic_travel_services_pkey PRIMARY KEY (clinic_id, travel_service_id),
  CONSTRAINT clinic_travel_services_clinic_id_fkey FOREIGN KEY (clinic_id) REFERENCES public.clinics(id),
  CONSTRAINT clinic_travel_services_travel_service_id_fkey FOREIGN KEY (travel_service_id) REFERENCES public.travel_services(id)
);
CREATE TABLE public.clinics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  owner_id uuid,
  slug text NOT NULL UNIQUE,
  name_i18n jsonb NOT NULL DEFAULT '{}'::jsonb,
  about_i18n jsonb NOT NULL DEFAULT '{}'::jsonb,
  address_i18n jsonb NOT NULL DEFAULT '{}'::jsonb,
  country text,
  city text,
  province text,
  district text,
  latitude double precision,
  longitude double precision,
  moderation_status USER-DEFINED NOT NULL DEFAULT 'pending'::moderation_status,
  is_published boolean NOT NULL DEFAULT false,
  verified_by_medtravel boolean NOT NULL DEFAULT false,
  is_official_partner boolean NOT NULL DEFAULT false,
  map_embed_url text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  deleted_at timestamp with time zone,
  document tsvector DEFAULT ((setweight(to_tsvector('simple'::regconfig, COALESCE((((((name_i18n ->> 'en'::text) || ' '::text) || (name_i18n ->> 'ru'::text)) || ' '::text) || (name_i18n ->> 'pl'::text)), ''::text)), 'A'::"char") || setweight(to_tsvector('simple'::regconfig, COALESCE((((((about_i18n ->> 'en'::text) || ' '::text) || (about_i18n ->> 'ru'::text)) || ' '::text) || (about_i18n ->> 'pl'::text)), ''::text)), 'B'::"char")) || setweight(to_tsvector('simple'::regconfig, COALESCE((((((address_i18n ->> 'en'::text) || ' '::text) || (address_i18n ->> 'ru'::text)) || ' '::text) || (address_i18n ->> 'pl'::text)), ''::text)), 'C'::"char")),
  CONSTRAINT clinics_pkey PRIMARY KEY (id),
  CONSTRAINT clinics_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.contact_messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  first_name text,
  last_name text,
  phone text,
  email text,
  message text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT contact_messages_pkey PRIMARY KEY (id),
  CONSTRAINT contact_messages_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.doctors (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  clinic_id uuid NOT NULL,
  first_name text NOT NULL,
  last_name text NOT NULL,
  specialization text,
  bio text,
  photo_url text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  deleted_at timestamp with time zone,
  CONSTRAINT doctors_pkey PRIMARY KEY (id),
  CONSTRAINT doctors_clinic_id_fkey FOREIGN KEY (clinic_id) REFERENCES public.clinics(id)
);
CREATE TABLE public.languages (
  id bigint NOT NULL DEFAULT nextval('languages_id_seq'::regclass),
  code character UNIQUE,
  name text NOT NULL UNIQUE,
  CONSTRAINT languages_pkey PRIMARY KEY (id)
);
CREATE TABLE public.premises (
  id bigint NOT NULL DEFAULT nextval('premises_id_seq'::regclass),
  name text NOT NULL UNIQUE,
  CONSTRAINT premises_pkey PRIMARY KEY (id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  first_name text,
  last_name text,
  email text NOT NULL UNIQUE,
  phone text,
  role USER-DEFINED NOT NULL DEFAULT 'guest'::user_role,
  date_of_birth date,
  locale USER-DEFINED NOT NULL DEFAULT 'en'::locale,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  deleted_at timestamp with time zone,
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.reports (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  clinic_id uuid NOT NULL,
  name text,
  email text,
  phone text,
  relationship text,
  message text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT reports_pkey PRIMARY KEY (id),
  CONSTRAINT reports_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT reports_clinic_id_fkey FOREIGN KEY (clinic_id) REFERENCES public.clinics(id)
);
CREATE TABLE public.reviews (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  clinic_id uuid NOT NULL,
  review text,
  rating_doctor smallint CHECK (rating_doctor >= 1 AND rating_doctor <= 10),
  rating_staff smallint CHECK (rating_staff >= 1 AND rating_staff <= 10),
  rating_assistant smallint CHECK (rating_assistant >= 1 AND rating_assistant <= 10),
  rating_support smallint CHECK (rating_support >= 1 AND rating_support <= 10),
  rating_facilities smallint CHECK (rating_facilities >= 1 AND rating_facilities <= 10),
  rating_overall smallint CHECK (rating_overall >= 1 AND rating_overall <= 10),
  consent_privacy boolean NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT reviews_pkey PRIMARY KEY (id),
  CONSTRAINT reviews_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT reviews_clinic_id_fkey FOREIGN KEY (clinic_id) REFERENCES public.clinics(id)
);
CREATE TABLE public.services (
  id bigint NOT NULL DEFAULT nextval('services_id_seq'::regclass),
  name text NOT NULL UNIQUE,
  slug text NOT NULL UNIQUE,
  CONSTRAINT services_pkey PRIMARY KEY (id)
);
CREATE TABLE public.staging_clinics (
  id bigint NOT NULL DEFAULT nextval('staging_clinics_id_seq'::regclass),
  clinic_name text,
  address text,
  country text,
  city text,
  categories text,
  services text,
  premises text,
  travel_services text,
  languages text,
  accreditations text,
  latitude double precision,
  longitude double precision,
  imported_at timestamp with time zone,
  notes text,
  CONSTRAINT staging_clinics_pkey PRIMARY KEY (id)
);
CREATE TABLE public.travel_services (
  id bigint NOT NULL DEFAULT nextval('travel_services_id_seq'::regclass),
  name text NOT NULL UNIQUE,
  CONSTRAINT travel_services_pkey PRIMARY KEY (id)
);